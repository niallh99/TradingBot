import requests
import pandas as pd
import matplotlib.pyplot as plt

# Function to get historical OHLCV data from Bybit
def get_bybit_data(symbol, interval="60", limit=200):
    url = f"https://api.bybit.com/v5/market/kline"
    params = {
        "symbol": symbol.upper(),
        "interval": interval,  # "1" = 1 min, "60" = 1 hour, "D" = 1 day
        "limit": limit
    }
    
    response = requests.get(url, params=params)
    data = response.json()

    if "result" in data and "list" in data["result"]:
        df = pd.DataFrame(data["result"]["list"], columns=[
            "timestamp", "open", "high", "low", "close", "volume", "turnover"
        ])
        
        # Convert timestamp to readable datetime
        df["timestamp"] = pd.to_datetime(df["timestamp"], unit="s")

        # Convert numeric values
        df[["open", "high", "low", "close", "volume"]] = df[["open", "high", "low", "close", "volume"]].astype(float)

        return df
    else:
        print("Error fetching data:", data)
        return None

# Fetch historical data for BTC/USDT from Bybit
df_btc = get_bybit_data("BTCUSDT", interval="60", limit=200)

# Plot Closing Price
if df_btc is not None:
    plt.figure(figsize=(10, 5))
    plt.plot(df_btc["timestamp"], df_btc["close"], label="BTC/USDT Price (Bybit)", color="green")
    plt.xlabel("Time")
    plt.ylabel("Price (USDT)")
    plt.title("BTC/USDT Price Movement on Bybit")
    plt.legend()
    plt.xticks(rotation=45)
    plt.grid()
    plt.show()
